"""initial schema

Revision ID: c4fba991f252
Revises: 
Create Date: 2025-09-17 20:22:06.686651

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'c4fba991f252'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'incident',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('public_id', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('category', sa.String(length=64), nullable=False),
        sa.Column('location_text', sa.String(length=255), nullable=True),
        sa.Column('contact_email', sa.String(length=255), nullable=True),
        sa.Column('priority', sa.String(length=50), nullable=True),
        sa.Column('status', sa.Enum('new', 'open', 'in_progress', 'resolved', 'closed', name='incidentstatus'), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incident_public_id'), 'incident', ['public_id'], unique=True)

    op.create_table(
        'kbdoc',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('body', sa.Text(), nullable=False),
        sa.Column('source_url', sa.String(length=512), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'user',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('hashed_password', sa.String(length=255), nullable=False),
        sa.Column('full_name', sa.String(length=255), nullable=True),
        sa.Column('is_staff', sa.Boolean(), nullable=False),
        sa.Column('role', sa.Enum('resident', 'staff', name='userrole'), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)

    op.create_table(
        'conversation',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=True),
        sa.Column('session_id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('pending_intent', sa.String(length=255), nullable=True),
        sa.Column('state', sqlite.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['user.id']),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_session_id'), 'conversation', ['session_id'], unique=False)

    op.create_table(
        'incidenthistory',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('incident_fk', sa.String(length=36), nullable=False),
        sa.Column('status', sa.Enum('new', 'open', 'in_progress', 'resolved', 'closed', name='incidentstatus'), nullable=False),
        sa.Column('note', sa.Text(), nullable=True),
        sa.Column('actor_user_id', sa.String(length=36), nullable=True),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['actor_user_id'], ['user.id']),
        sa.ForeignKeyConstraint(['incident_fk'], ['incident.id']),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'kbchunk',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('doc_id', sa.String(length=36), nullable=False),
        sa.Column('text', sa.Text(), nullable=False),
        sa.Column('embedding', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['doc_id'], ['kbdoc.id']),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'message',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('conversation_id', sa.String(length=36), nullable=False),
        sa.Column('sender', sa.Enum('resident', 'staff', 'system', 'bot', name='sender'), nullable=False),
        sa.Column('text', sa.Text(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id']),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('message')
    op.drop_table('kbchunk')
    op.drop_table('incidenthistory')
    op.drop_index(op.f('ix_conversation_session_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('kbdoc')
    op.drop_index(op.f('ix_incident_public_id'), table_name='incident')
    op.drop_table('incident')
    # ### end Alembic commands ###
